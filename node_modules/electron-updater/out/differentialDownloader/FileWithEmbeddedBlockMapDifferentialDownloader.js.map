{"version":3,"sources":["../../src/differentialDownloader/FileWithEmbeddedBlockMapDifferentialDownloader.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEM,MAAO,8CAAP,SAA8D,gDAA9D,CAAoF;AAClF,EAAA,QAAN,GAAc;AAAA;;AAAA;AACZ,YAAM,WAAW,GAAG,KAAI,CAAC,kBAAzB;AACA,YAAM,QAAQ,GAAG,WAAW,CAAC,IAA7B;AACA,YAAM,MAAM,GAAG,QAAQ,IAAI,WAAW,CAAC,YAAZ,GAA6B,CAAjC,CAAvB;AACA,MAAA,KAAI,CAAC,kBAAL,GAA0B,MAAM,KAAI,CAAC,eAAL,CAAqB,MAArB,EAA6B,QAAQ,GAAG,CAAxC,CAAhC;AACA,YAAM,WAAW,GAAG,MAAM,4CAAa,KAAI,CAAC,kBAAL,CAAwB,KAAxB,CAA8B,CAA9B,EAAiC,KAAI,CAAC,kBAAL,CAAwB,MAAxB,GAAiC,CAAlE,CAAb,CAA1B;AACA,YAAM,KAAI,CAAC,UAAL,CAAgB,IAAI,CAAC,KAAL,EAAW,MAAM,6CAAyB,KAAI,CAAC,OAAL,CAAa,OAAtC,CAAjB,EAAhB,EAAkF,WAAlF,CAAN;AANY;AAOb;;AARuF,C","sourcesContent":["import { readEmbeddedBlockMapData } from \"builder-util-runtime/out/blockMapApi\"\nimport { DifferentialDownloader, readBlockMap } from \"./DifferentialDownloader\"\n\nexport class FileWithEmbeddedBlockMapDifferentialDownloader extends DifferentialDownloader {\n  async download() {\n    const packageInfo = this.blockAwareFileInfo\n    const fileSize = packageInfo.size!!\n    const offset = fileSize - (packageInfo.blockMapSize!! + 4)\n    this.fileMetadataBuffer = await this.readRemoteBytes(offset, fileSize - 1)\n    const newBlockMap = await readBlockMap(this.fileMetadataBuffer.slice(0, this.fileMetadataBuffer.length - 4))\n    await this.doDownload(JSON.parse(await readEmbeddedBlockMapData(this.options.oldFile)), newBlockMap)\n  }\n}"],"sourceRoot":""}
